{
  "hash": "9efb914e678f48b49411cc01260af864",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 1: Analyzing Olympic Data with R\"\ndate: \"2024-08-16\"\noutput: html_document\n---\n\n\n\n# Introduction\n\nIn this lab session, you'll work with a dataset containing information about the Olympics. The dataset includes various variables, such as the edition of the games, country codes, sports, events, athletes, and the results. Your goal is to explore this data, identify patterns, handle missing values, and generate insights using R.\n\nThroughout the lab, you will use the following R functions:\n\n- `read_csv()`: This function from the `readr` package reads a CSV file and creates a data frame.\n- `head()`: Displays the first few rows of a data frame to give you a quick look at the data.\n- `summary()`: Provides summary statistics for each variable in the dataset.\n- `n_distinct()`: Counts the number of unique values for a particular variable.\n- `colSums()`: Sums up the values in each column, which is useful for counting missing values.\n- `is.na()`: Checks for `NA` (missing) values in the dataset.\n- `na.omit()`: Removes rows with missing values from a data frame.\n- `filter()`: Extracts rows from a data frame that meet certain conditions.\n- `group_by()`: Groups the data by one or more variables, which is often used before summarizing data.\n- `summarize()`: Creates summary statistics for each group in the data.\n- `arrange()`: Orders the rows of a data frame based on the values of one or more columns.\n- `pull()`: Extracts a single column from a data frame as a vector.\n- `slice()`: Selects rows by position from a data frame.\n- `distinct()`: Extracts distinct (unique) rows from a data frame.\n- `count()`: Counts the number of occurrences of each unique value in a column.\n\nThese functions will enable you to load and explore the dataset, handle missing data, and perform various analyses to extract insights.\n\nThe dataset contains the following variables:\n\n- `edition`: The edition of the Olympic Games.\n- `edition_id`: A unique identifier for the edition.\n- `country_noc`: The National Olympic Committee (NOC) code representing the country.\n- `sport`: The sport in which the event took place.\n- `event`: The specific event within the sport.\n- `result_id`: A unique identifier for the result.\n- `athlete`: The name of the athlete.\n- `athlete_id`: A unique identifier for the athlete.\n- `pos`: The position or rank the athlete achieved in the event.\n- `medal`: The type of medal won (if any).\n- `isTeamSport`: Indicates whether the event is a team sport.\n\n# Loading Packages and Data\n\nTo start, you'll need to load the necessary packages and the dataset. This will allow you to perform the analyses required for the lab exercises.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary packages\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\n# Load the dataset\nolympics_data <- read_csv(\"https://raw.githubusercontent.com/josephwccheng/olympedia_web_scraping/main/data/Olympic_Athlete_Event_Results.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 314907 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): edition, country_noc, sport, event, athlete, pos, medal\ndbl (3): edition_id, result_id, athlete_id\nlgl (1): isTeamSport\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n\n## Exercise 1: Data Exploration\n\n1. **Load the dataset into R.**  \n   Use the code provided above to load the dataset.\n\n2. **Get an overview of the dataset.**  \n   You should display the first few rows and summarize each variable to understand the dataset's structure. This step is crucial for familiarizing yourself with the data you'll be working with.\n\n3. **Determine the number of unique editions, sports, and events in the dataset.**  \n   Your goal here is to identify the diversity within the dataset. Use R functions to calculate how many unique Olympic editions, sports, and events are represented in the data.\n\n### Expected Outcome:\n- An understanding of the dataset’s structure.\n- Insights into the diversity of the data, such as the number of unique Olympic editions and sports.\n\n## Exercise 2: Handling Missing Values\n\n1. **Identify missing values.**  \n   Determine which variables have missing values and how many missing values are present in each. This will help you understand the completeness of the data.\n\n2. **Create a subset of the data where all missing values are removed.**  \n   You should generate a clean dataset without missing values. Consider how this might impact your analysis.\n\n3. **Discuss the impact of removing rows with missing values.**  \n   Reflect on how the removal of rows could influence the results and representativeness of the data.\n\n### Expected Outcome:\n- A list of variables with missing values.\n- A cleaned version of the dataset.\n- A thoughtful consideration of the implications of removing missing data.\n\n## Exercise 3: Analyzing Medals Distribution\n\n1. **Calculate the total number of medals won by each country.**  \n   You’ll need to group the data by country and count the total number of medals won.\n\n2. **Identify the country with the most gold medals.**  \n   Focus on identifying which country has excelled the most in terms of winning gold medals.\n\n### Expected Outcome:\n- A summary table showing the total medals won by each country.\n- Identification of the top-performing country in terms of gold medals.\n\n## Exercise 4: Analyzing Performance by Athlete\n\n1. **Identify the athlete with the most medals overall.**  \n   Your task is to find the athlete who has won the most medals in the Olympics.\n\n2. **Determine the number of unique events the athlete has participated in.**  \n   Investigate the range of events this top athlete has competed in.\n\n### Expected Outcome:\n- The name of the athlete with the most medals.\n- The number of unique events this athlete has participated in, offering insight into their versatility.\n\n## Exercise 5: Team Sports vs. Individual Sports\n\n1. **Compare the number of medals won in team sports versus individual sports.**  \n   Analyze how successful athletes have been in team sports compared to individual sports.\n\n2. **Identify the most successful team sport.**  \n   Determine which team sport has yielded the most medals.\n\n### Expected Outcome:\n- A comparison of medals won in team versus individual sports.\n- Identification of the most successful team sport, providing insights into which team events dominate in terms of medals.\n\n# Conclusion\n\nThis lab session is designed to help you work with real-world Olympic data, exploring various techniques to handle and analyze data in R. By the end of this session, you should be able to perform basic data exploration, handle missing data, and analyze key aspects of the dataset. Make sure to reflect on any challenges you encounter and bring them up in the next session for discussion.",
    "supporting": [
      "01-lab_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}