{
  "hash": "985e3bff0a874d1867a8f84f1fcd9038",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Pipes\"\nreference-location: margin\n---\n\n\n\n\n\n\nIn the primers (and in [Lesson 4](/lesson/04-lesson.qmd)) you were introduced to the pipe operator `|>`, which takes the object on the left of the pipe and passes it as the first argument to the function on the right.\n\nLike, you can find the average of the numbers 1, 2, 3, 4, and 5 like this:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmean(c(1, 2, 3, 4, 5))\n## [1] 3\n```\n:::\n\n\n\n\nOr like this:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nc(1, 2, 3, 4, 5) |> mean()\n## [1] 3\n```\n:::\n\n\n\n\n## Pipe styles\n\nThere are actually two pipe operators in R, and you'll see both in the wild.\n\n::: {.column-margin}\n![René Magritte, \"The Treachery of Images\"](img/MagrittePipe.jpg)\n:::\n\n- The `%>%` operator was invented first in 2014 in an [R package named {magrittr}](https://magrittr.tidyverse.org/), a pun on René Magritte's [famous painting of a pipe, \"The Treachery of Images\"](https://en.wikipedia.org/wiki/The_Treachery_of_Images). \n- The `|>` operator was added as a native part of R itself with version 4.1.0 in May 2021. It doesn't require any extra packages to use.\n\nIn 99% of cases, the two pipes are the same ([see here for details about their differences](https://www.tidyverse.org/blog/2023/04/base-vs-magrittr-pipe/); or [see this too](https://ivelasq.rbind.io/blog/understanding-the-r-pipe/)). The magrittr `%>%` is still wildly popular and you'll see code online that uses it. The main downside to the magrittr pipe is that it requires that you load a package to use it. If you run `library(tidyverse)`, you'll have access to it, and in this class you'll load tidyverse 100% of the time, so you can use `%>%` without any problems. \n\nI switched my R classes away from `%>%` to `|>` starting in January 2024, mostly following the example of Hadley Wickham (inventor of ggplot, dplyr, and pretty much all the tidyverse). The first edition of [*R for Data Science*](https://r4ds.had.co.nz/) by Hadley Wickham and Garrett Grolemund used the magrittr pipe (`%>%`) extensively, which is partially why it became so popular. In [the second edition of *R for Data Science*](https://r4ds.hadley.nz/), though, published in June 2023, they switched to the native pipe (`|>`). I took that as a cue to do the same in my own R work.\n\nSo I'm teaching you the native pipe (`|>`). But don't panic if you see the magrittr pipe (`%>%`) out there. And feel free to use it too. Again, 99% of the time, it works the same:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# {magrittr} pipe\nc(1, 2, 3, 4, 5) %>% mean()\n## [1] 3\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Native pipe\nc(1, 2, 3, 4, 5) |> mean()\n## [1] 3\n```\n:::\n\n\n\n\nJust don't mix the two pipes in the same chain of functions. **This is bad**:\n\n```r\nmpg |> \n  group_by(...) %>%\n  summarize(...) |>\n  filter(...) %>%\n  select(...)\n```\n\n## Pipes and fancy fonts\n\nThe `|>` is actually designed to look like a triangle pointing to the left: ▷\n\nBut in pretty much all fonts, the `|` character is too tall and doesn't align with the top and bottom of the left side of the `>` character, so it doesn't *quite* look right.\n\nIf you want to be fancy and cool, you can [download and install a special programming font named Fira Code](https://github.com/tonsky/FiraCode) that uses some typographic magic to make certain combinations of characters appear differently in RStudio. \n\nLike, check out the `==` and `!=` and `<=` and `|>` characters normally:\n\n![Sample code with a normal font](img/normal-font.png)\n\nAnd now look at them with Fira Code, where they're magically transformed into fancier combinations:\n\n![Sample code with Fira Code](img/fira-code.png)\n\nThe underlying code is the same—the `!=` combination isn't actually converted to a ≠ character. It just looks that way.\n\nInstall the font, then go to Tools > Global Options… > Appearance and change the editor font if you want to use Fira Code in RStudio.\n\n## Pipe keyboard shortcut\n\nIn RStudio, you can insert a pipe operator with a keyboard shortcut:\n\n- On macOS: <kbd>⌘</kbd> + <kbd>⇧</kbd> + <kbd>M</kbd>^[The \"M\" here refers to the **m**agrittr pipe]\n\n- On Windows: <kbd>ctrl</kbd> + <kbd>shift</kbd> + <kbd>M</kbd>\n\nYou can control which kind of pipe is inserted by going to Tools > Global options… > Code > Editing and toggling the \"Use native pipe operator\" option:\n\n![RStudio pipe options](img/pipe-options.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}